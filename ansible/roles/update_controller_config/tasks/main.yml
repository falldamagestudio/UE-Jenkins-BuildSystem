- name: copy Docker Compose files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '0644'
    group: "{{ group }}"
    owner: "{{ user }}"
  with_items: "{{ docker_compose_files }}"

- name: Create casc_configs folder
  file:
    path: "{{ home }}/casc_configs"
    state: directory
    mode: '0755'
    group: "{{ group }}"
    owner: "{{ user }}"

- name: Copy CasC configs
  ansible.posix.synchronize:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    delete: true  # Remove files in destination folders that do not exist in source folders
    owner: false  # Do not set owner (this is controlled by the next task)
    group: false  # Do not set group (this is controlled by the next task)
  with_items: "{{ casc_config_folders }}"

- name: Fix group/owner of CasC configs
  file:
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    recurse: yes
  with_items: "{{ casc_config_folders }}"

- name: Create .plastic4 folder
  file:
    path: "{{ home }}/.plastic4"
    state: directory
    mode: '0755'
    group: "{{ group }}"
    owner: "{{ user }}"

- name: Copy google_application_credentials.json
  copy:
    src: "{{ google_application_credentials_file.src }}"
    dest: "{{ google_application_credentials_file.dest }}"
    mode: '0644'
    group: "{{ group }}"
    owner: "{{ user }}"

- name: Ensure .docker folder exists
  ansible.builtin.file:
    path: "{{ home }}/.docker"
    state: directory
    mode: '0755'
    group: "{{ group }}"
    owner: "{{ user }}"

- name: Configure Docker to use gcloud as authentication helper
  template:
    src: templates/config.json.j2
    dest: "{{ home }}/.docker/config.json"
    mode: '0600'
    group: "{{ group }}"
    owner: "{{ user }}"
